<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.test.project.mapper.BoardMapper">
	
	<!-- int add(BoardDTO dto); -->
	<insert id="add" parameterType="bdto">
	
		<selectKey keyProperty="seq" order="BEFORE" resultType="String">
			select seqBoard.nextVal from dual
		</selectKey>
	
		insert into tblBoard (seq, subject, content, regdate, readcount, id, attach) values (#{seq}, #{subject}, #{content}, default, default, #{id}, #{attachName})
	</insert>
	
	<!-- List<BoardDTO> list(HashMap<String, String> map); -->
	<select id="list" resultType="bdto" parameterType="map">
		
		<if test='tag == ""'>
		select * from 
			(select * from vwBoard
				<if test='search == "y"'>
				where ${column} like '%' || #{word} || '%'
				</if>
			)
			offset #{offset} rows fetch next #{pageSize} rows only
		</if>
		<if test='tag != ""'>
		select
		    *
		from vwBoard b
		    inner join tblTagging tg
		        on b.seq = tg.bseq
		            inner join tblTag t
		                on t.seq = tg.tseq
		                    where t.tag = #{tag}
		                    	order by b.seq desc
		</if>
		
	</select>
	
	<!-- BoardDTO view(String seq); -->
	<select id="view" parameterType="String" resultType="bdto">
		select
			tblBoard.*,
			tblBoard.attach as attachName,
			(select name from tblMember where id = tblBoard.id) as name
		from tblBoard
			where seq = #{seq}
	</select>
	
	<!-- void addReadcount(String seq); -->
	<update id="addReadcount" parameterType="String">
		update tblBoard set
			readcount = readcount + 1
				where seq = #{seq}
	</update>	
	
	<!-- int edit(BoardDTO bdto); -->
	<update id="edit" parameterType="bdto">
		update tblBoard set
			subject = #{subject},
			content = #{content}
				where seq = #{seq}
	</update>
	
	<!-- int del(BoardDTO bdto); -->
	<delete id="del" parameterType="bdto">
		delete from tblBoard
			where seq = #{seq}
	</delete>
	
	<!-- int getTotalCount(HashMap<String, String> map); -->
	<select id="getTotalCount" parameterType="map" resultType="Integer">
		select count(*) from tblBoard
			<if test='search == "y"'>
			where ${column} like '%' || #{word} || '%'
			</if>
	</select>
	
	<!-- List<CommentDTO> clist(String seq); -->
	<select id="clist" parameterType="map" resultType="cdto">
		<!-- 
		select 
			tblComment.*,
			(select name from tblMember where id = tblComment.id) as name
		from tblComment
			where bseq = #{bseq}
				order by seq desc 
		-->
		
		select * from (select 
	        tblComment.*,
	        (select name from tblMember where id = tblComment.id) as name
	    from tblComment
	        where bseq = #{bseq}
	            order by seq desc)
	                offset #{offset} rows fetch next 5 rows only
	</select>
	
	<!-- CommentDTO cget(String seq); -->
	<select id="cget" parameterType="String" resultType="cdto">
		select * from tblComment
			where seq = #{seq}
	</select>
	
	<!-- void cadd(CommentDTO dto); -->
	<insert id="cadd" parameterType="cdto">
	
		<selectKey order="BEFORE" keyProperty="seq" resultType="String">
			select 
				seqComment.nextVal
			from dual
		</selectKey>
			
		insert into tblComment (seq, content, regdate, id, bseq)
		values (#{seq}, #{content}, default, #{id}, #{bseq})
	</insert>
	
	<!-- int cedit(CommentDTO cdto); -->
	<update id="cedit" parameterType="cdto">
		update tblComment set
			content = #{content}
				where seq = #{seq}
	</update>

	<!-- int cdel(String seq); -->
	<delete id="cdel" parameterType="String">
		delete from tblComment 
			where seq = #{seq}
	</delete>
	
	<!-- int cdel(String seq); -->
	<delete id="cbdel" parameterType="String">
		delete from tblComment
			where bseq = #{bseq}
	</delete>
	
	<!-- boolean existTag(String tagName); -->
	<select id="existTag" parameterType="String" resultType="Boolean">
		select count(*) from tblTag
			where tag = #{tagName}
	</select>
	
	<!-- TagDTO getTag(String tagName); -->
	<select id="getTag" parameterType="String" resultType="tdto">
		select * from tblTag
			where tag = #{tagName}
	</select>
	
	<!-- void addTag(TagDTO tdto); -->
	<insert id="addTag" parameterType="tdto">
		
		<selectKey keyProperty="seq" order="BEFORE" resultType="String">
			select seqTag.nextVal from dual		
		</selectKey>
		
		insert into tblTag (seq, tag)
			values (#{seq}, #{tag})
	</insert>
	
	<!-- void addTagging(TaggingDTO tgdto); -->
	<insert id="addTagging" parameterType="tgdto">
		insert into tblTagging (seq, bseq, tseq)
			values (seqTagging.nextVal, #{bseq}, #{tseq})
	</insert>	
	
	<!-- List<String> getTags(String seq); -->
	<select id="getTags" parameterType="String" resultType="String">
		select
			t.tag
		from tblTag t
			inner join tblTagging tg
				on t.seq = tg.tseq
					where tg.bseq = #{seq}
	</select>
	
</mapper>









